package com.wordpress.rathinasaba.ws.client;
 
import java.io.IOException;
 
import org.apache.commons.httpclient.HttpConnection;
import org.apache.commons.httpclient.HttpState;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
 
public class CustomerSvcClient {
     
    private static final String host="localhost";
    private static final String port="8011";
     
    public static String invokeCustomerSvc(String payload,String endpointURL){
         String wellformedrequest=null;
         String serviceResponse=null;
         HttpConnection httpConn=null;
         try {
            if (!payload.toUpperCase().contains("</SOAPENV:BODY>")) {
                
                 String soapEnvHeader =
                     "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n" +
                     "   <soapenv:Body>";
                 String body = payload;
                 String soapEnvFooter = " </soapenv:Body>\n" +"</soapenv:Envelope>";
                 wellformedrequest = soapEnvHeader.concat(body).concat(soapEnvFooter);
             } else {
                 wellformedrequest = payload;
             }
              
             /**
              * Creating Http Connection to call WebService Over HTTP Protocol
              */
            println(" ---- Creating HTTP Connection ----");
            httpConn=new HttpConnection(host,Integer.parseInt(port));
            httpConn.open();
            PostMethod postMethod=new PostMethod();
             /**
              * Set Endpoint URL
              */
            postMethod.setPath(endpointURL);
            postMethod.setRequestEntity(new StringRequestEntity(wellformedrequest, "application/soap+xml", "utf-8"));
            postMethod.execute(new HttpState(), httpConn);
            println("HTTP Response Status :"+postMethod.getStatusLine().toString());
            serviceResponse=postMethod.getResponseBodyAsString();
            println("Service Response :"+serviceResponse);
        } catch (NumberFormatException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }finally{
            httpConn.releaseConnection();
        }
         return serviceResponse;
    }
     
    private static void println(Object content){
        System.out.println(content);
    }
     
    private static String getSayHelloRequest(){
        String sayHelloRequest="<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ws=\"http://com/wordpress/rathinasaba/ws\">" +
                        "           <soapenv:Header/>" +
                        "           <soapenv:Body>" +
                        "               <ws:sayHello>" +
                        "                   <ws:name>Rathina Sabapathy</ws:name>" +
                        "                </ws:sayHello>" +
                        "           </soapenv:Body>" +
                        "       </soapenv:Envelope>";
     
        return sayHelloRequest;
    }
     
    private static String getSayHelloRequestOne(){
        String sayHelloRequest="<ws:sayHello xmlns:ws=\"http://com/wordpress/rathinasaba/ws\">" +
                "         <ws:name>Rathina Sabapathy</ws:name>" +
                "      </ws:sayHello>";
        return sayHelloRequest;
    }
     
    private static String getCheckStatusRequest(){
        String statusRequest="<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ws=\"http://com/wordpress/rathinasaba/ws\">" +
                            "   <soapenv:Header/>" +
                            "   <soapenv:Body>" +
                            "      <ws:checkStatus>" +
                            "         <ws:serviceName>SMS</ws:serviceName>" +
                            "      </ws:checkStatus>" +
                            "   </soapenv:Body>" +
                            "</soapenv:Envelope>";
        return statusRequest;
    }
     
    private static String getUpdateAddressRequest(){
        String statusRequest="<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ws=\"http://com/wordpress/rathinasaba/ws\">" +
                "              <soapenv:Header/>" +
                "                  <soapenv:Body>" +
                "                     <ws:updateAddress>" +
                "                        <ws:address>Adyar,Chennai</ws:address>" +
                "                     </ws:updateAddress>" +
                "                  </soapenv:Body>" +
                "               </soapenv:Envelope>";
        return statusRequest;
    }
     
    public static void main(String[] args) {
        String endpointURL="http://localhost:8011/CustomerSvc/CustomerService";
         
        /**
         * 1. Call SayHello Service With SOAP body and Without SOAP body
         */
        invokeCustomerSvc(getSayHelloRequest(), endpointURL);
        invokeCustomerSvc(getSayHelloRequestOne(), endpointURL);
         
        /**
         * 2. Call CheckStatus Service
         */
        invokeCustomerSvc(getCheckStatusRequest(), endpointURL);
         
        /**
         * 3. Call UpdateAddress Service
         */
        invokeCustomerSvc(getUpdateAddressRequest(), endpointURL);
    }
 
}





==============================================================================================================================

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.nio.charset.Charset;

import javax.xml.soap.MessageFactory;
import javax.xml.soap.MimeHeaders;
import javax.xml.soap.SOAPConnection;
import javax.xml.soap.SOAPConnectionFactory;
import javax.xml.soap.SOAPException;
import javax.xml.soap.SOAPMessage;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.stream.StreamResult;

// Credits:
// http://stackoverflow.com/questions/19291283/soap-request-to-webservice-with-java
// http://stackoverflow.com/questions/13180372/creating-a-soapmessage-from-string-xml-of-entire-soap-message
public class HelloSoapClient {

    /**
     * Starting point for the SAAJ - SOAP Client Testing
     */
    public static void main(String args[]) {
        try {
            // Create SOAP Connection
            SOAPConnectionFactory soapConnectionFactory = SOAPConnectionFactory.newInstance();
            SOAPConnection soapConnection = soapConnectionFactory.createConnection();

            // Send SOAP Message to SOAP Server
            String url = "http://localhost:8080/helloService";
            String soapMessage = "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:nam=\"namespace\">\r\n" + 
                    "   <soapenv:Header/>\r\n" + 
                    "   <soapenv:Body>\r\n" + 
                    "      <nam:hello>\r\n" + 
                    "         <!--Optional:-->\r\n" + 
                    "         <arg0>World</arg0>\r\n" + 
                    "      </nam:hello>\r\n" + 
                    "   </soapenv:Body>\r\n" + 
                    "</soapenv:Envelope>";
            SOAPMessage soapResponse = soapConnection.call(getSoapMessageFromString(soapMessage), url);

            // Process the SOAP Response
            printSOAPResponse(soapResponse);

            soapConnection.close();
        } catch (Exception e) {
            System.err.println("Error occurred while sending SOAP Request to Server");
            e.printStackTrace();
        }
    }

    private static SOAPMessage getSoapMessageFromString(String xml) throws SOAPException, IOException {
        MessageFactory factory = MessageFactory.newInstance();
        SOAPMessage message = factory.createMessage(new MimeHeaders(), new ByteArrayInputStream(xml.getBytes(Charset.forName("UTF-8"))));
        return message;
    }
    /**
     * Method used to print the SOAP Response
     */
    private static void printSOAPResponse(SOAPMessage soapResponse) throws Exception {
        TransformerFactory transformerFactory = TransformerFactory.newInstance();
        Transformer transformer = transformerFactory.newTransformer();
        Source sourceContent = soapResponse.getSOAPPart().getContent();
        System.out.print("\nResponse SOAP Message = ");
        StreamResult result = new StreamResult(System.out);
        transformer.transform(sourceContent, result);
    }

}
=====================================================================================

    public void doWithMessage(WebServiceMessage message) {

        try {

            SaajSoapMessage saajSoapMessage = (SaajSoapMessage)message;

            SOAPMessage soapMessage = saajSoapMessage.getSaajMessage();

            SOAPPart soapPart = soapMessage.getSOAPPart();

            SOAPEnvelope soapEnvelope = soapPart.getEnvelope();

            SOAPHeader soapHeader = soapEnvelope.getHeader();

            Name headerElementName = soapEnvelope.createName(
                    "Security",
                    "wsse",
                    "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
            );
            SOAPHeaderElement soapHeaderElement = soapHeader.addHeaderElement(headerElementName);

            SOAPElement usernameTokenSOAPElement = soapHeaderElement.addChildElement("UsernameToken", "wsse");

            SOAPElement userNameSOAPElement = usernameTokenSOAPElement.addChildElement("Username", "wsse");
            logger.info(this.username);
            userNameSOAPElement.addTextNode(this.username);

            SOAPElement passwordSOAPElement = usernameTokenSOAPElement.addChildElement("Password", "wsse");

            passwordSOAPElement.addTextNode(this.password);

            soapMessage.saveChanges();
